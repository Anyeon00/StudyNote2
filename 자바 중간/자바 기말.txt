김태균 교수님 개념 정리

[프로그래밍 기법]
data definition[변수선언]을 상단에 모아서 하기

swap
x = x ^ y;
y = x ^ y;
x = x ^ y;

specification(명세): 사용자입장에서 반드시 알아야 될 사항(함수이름으로써 사용법을 정의)
implementation(구현): 공급자가 반드시 알아야 될 사항(함수내용작성)
*메인함수에서 사용할 함수를 먼저 쓰고, specification을 확정 후, implementation을 수행

Exception Handling (-> Defensive Programming)
-목적: 신뢰성이 높은 프로그램
*Defensive Programming
-에러감지, 에러조치

재귀함수 리커시브프로그램짤때
: 가장작은수일떄를 먼저 작성



[프로그래밍 용어, 개념]

static variable :프로그램의 실행이 시작될때 생기고, 종료될때 사라짐(고급c 8주차)
automatic variable :함수가 시작되고 종료될때 

Memory Allocation Scheme(어떤 변수를 위한 기억장소가 언제 할당되고 사라지는가)
-static allocation : 프로그램실행이 시작되고 종료될때
-automatic allocation :  함수가 호출될때( 블록에 들어갈때
-dynamic allocation : 배열을 automatic allocation했을때 overflow문제, memory낭비문제 보완 / garbage collection을 신경써야 함

컴퓨터 메모리
-code영역, data영역(static area), heap영역, stack영역

call by value(값에 의한 호출) : actual parameter값이 formal parameter에 copy되는 parameter passing 방법
call by reference(참조에 의한 호출) : actual parameter의 주소를 전달하는 parameter passing 방법

*자세한 차이
call by address는 주소변수(포인터변수)를 할당하고 주소를 복사해옴
call by reference는 가리키는 reference이름을 바꿔서 들고오므로 할당되는 메모리가 없음

에러 3종류
-syntax error
-link error : 메인메소드에서 함수를 잘못 사용했을때
-runtime error : 작동정지/엉터리결과

two's complement : 2진수에서 2의 보수 : 1의 보수 + 1
진수변환:
1. x값을 8진수나 16진수로 변환하기
-> 먼저 2진수로 바꾸고 8진수면 3자리, 16진수면 4자리씩 묶어서 변환
2. 음수 x값을 8진수나 16진수로 변환하기
-> 먼저 2진수로 바꾸고 1의 보수로 바꾼후 +1 후에 1과 동일
ex)
-16진수 0111 1111 11...=> 7 f f ...  //0x7fffffff
*2진수 4개가 모이면 16진수가 됨

bitwise
&(and) : x
|(or) : +
^(xor) : 같으면 0, 다르면 1
~(not) : 반대

자바와 C io
1. C의 경우 한줄 단위로 받아 처리함
2. StringTokenize함
3. atoi로 정수로 변환
=> 자바, C#에서는 이 방식만 사용

checked exception : 반드시  try catch해줘야함
unchecked exception : 필요에 따라

Boxing : Integer a = 4; 했을때 Integer는 객체고 a는 레퍼런스이므로 =4가 말이 안되는데 
자동으로 heap영역에 객체를 만들고 data int4를 넣어주는 기능(int변수처럼 사용할수있게해주는기능)
반대로 꺼낼때: unboxing
*Generic class에서 이용

Java IO:
BufferedReader br = new BufferedReader(new InputStreamReader(System.in);
에서 InputStreamReader(System.in)은 한방울씩
BufferedRdeader는 통으로 받음

truncate : Integer 나누기 연산에서 생기는 소수점 이하 버리기

API: application programming interface

랜덤넘버 seeding?


재귀함수(recursive function) : 함수정의 내에 함수 호출이 있는 경우
-무한루프에 빠지지않기 위해 반드시 if가 필요함(boundary condition 경계조건)
-장점: 작성하기가 쉽고 이해하기가 쉽다
-단점: 속도가 느리고 기억장소가 커지는 경우가 발생할 수 있음


[자료구조]
Colloection 객체: 상자
ex) 버스는 승객을 담는 colloection객체
ex) 스택도 collection 객체

Linkedlist란 : 배열의 문제점을 해결하기 위한 colloection객체
배열의 문제점: 
1. 배열의 크기가 고정되어있다
2. 삽입삭제가 비효율적임

Stack: LIFO 방식으로 운영되는 collection 객체
넣을때는 push함수를 이용하고 뺄 때는 pop함수를 이용합니다
목적 : 최근 순으로 과거의 역사를 기록하기 위함

Queue: FIFO 방식으로 운영되는 collection 객체
넣을때는 add함수를 이용하고 뺄 때는 remove함수를 이용합니다(자바)
(일반적으로 enter, leave)
