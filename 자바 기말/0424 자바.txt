0424 자바

c언어 2차원배열 만드는법 3가지
* 메모리에 1차원배열 나열형태로 만들어짐

1. int x[3][4];
* c언어에서 배열의 이름은 배열의 시작주소를 의미함
배열 x를 파라미터로 넘길때 넘어가는 값은 &x[0][0]임
-> 파라미터로 *x로 사용(x[]로 써도됨)((int*)x)
*2차원배열을 1차원으로 바꾸기
k(1차원으로 바뀐 주소) = i*col(행갯수) + j;
ex) for(i = 0; i < 4)
	for(j=0; j < 3)
		printf("%5d", x[i][j]);


2. int *y;(2차원배열을 관리하기위한 포인터)
  y = (int *)malloc(row*col*sizeof(int));  //2차원배열이므로 행*열*int크기만큼 할당
for
  for
    printf("%5d", y[i*col+j];


3. int **z; (더블포인터) (자바처럼 1차원은 포인터배열, 2차원에 data배열 할당)
z[0]는 레퍼런스 배열의 0번째
z[0][0]는 data배열의 0번째

만드는법
int **z;
z = (int **)malloc(row*sizeof(int*));	//크기 row*sizeof(int*)할당 //1차원배열부분 레퍼런스배열 생성

for(i=0;i<row)
  z[i] = (int *)malloc(col*sizeof(int));  //2차원배열부분 data배열 생성

데이터 넣는법
for(i=0;i<row)
  for(j=0;j<col)
    z[i][j] = rand()%100;

함수생성(파라미터이용)
메인
: print(z,col,row);

함수
: void print(int **z, int row, int col)
  z[i][j] = ~~;


만드는 코드를 함수로 만들어놓기
메인:
z = alloArray(row,col);
함수:
int** allocArray(int row, int col)
  z = (int **)malloc(row*sizeof(int*));	//크기 row*sizeof(int*)할당 //1차원배열부분 레퍼런스배열 생성
  for(i=0;i<row)
    z[i] = (int *)malloc(col*sizeof(int));  //2차원배열부분 data배열 생성
  return z;


*garbage collection해줘야함